###############################################################################################################
##  GFBLUP for Arabidopsis amino acid panel
##  This script uses GFBLUP to compare the amino acid SNP (AAS) subset to the control SNP (CS) subset
##  S. Turner
##  Jan. 31 2018
###############################################################################################################

# load libraries
library(qgg)

###############################################################################################################
## Load and prepare data

load("./input_files/gfblup_input.Rdata")
# use command line arguments
args <- commandArgs(trailingOnly=TRUE)
index <- as.numeric(args[1])
traits <- colnames(phenotypes[,2:28])
pheno <- traits[index]
print(pheno)

###############################################################################################################
### Run GBLUP and GFBLUP 
# remove individuals with missing phenotypes
p_missing <- phenotypes$Taxa[is.na(phenotypes[,pheno])]
phenotypes <- phenotypes[!phenotypes$Taxa %in% p_missing,]
G <- G[!rownames(G) %in% p_missing, !colnames(G) %in% p_missing]
W <- W[!rownames(W) %in% p_missing,]
L <- ncol(G)

# create lists of subsets for different models
# setsGB <- list(F=colnames(W)) # define SNP set for gblup model - not really necessary?

# formula
fm <- as.formula(paste(pheno[1], "~", 1, sep=""))
print(fm)

# parameters for REML analyses and cross validation
n <- ncol(G)
fold <- 10
nsets <- 50

# ids for validation sets
validate <- replicate(nsets, sample(1:n, as.integer(n / fold))) # matrix input

# standard gblup model
# fitGB <- gfm(fm=fm, W=W, G=list(G), data=phenotypes, validate=validate)

result <- NULL
result_5 <- NULL

dir.create(paste("./gfblup_results/", pheno, "/", sep=""))

# gfblup model comparing AAS and CS subsets
# exports input for binomial test
for (i in 1:1000){
  print(i)
  # read in control marker data
  m_control <- read.table(paste("./control_markers/plink_control_snplist_", i, ".txt", sep=""))
  m_control <- as.character(m_control[,1])
  # define marker sets
  setsGF <- list(AAS=m_aas, C=m_control) # define SNP set for gfblup model using AA snps
  # fit the model! 
  fitGF <- gfm(fm=fm, W=W, G=list(G), sets=setsGF, data=phenotypes, validate=validate)
  save(fitGF, file=paste("./gfblup_results/", pheno, "/fitGF_", pheno, i, ".RData", sep=""))
  df <- as.data.frame(fitGF$sigmas)
  result[i] <- mean(df$AAS) > mean(df$C)
  result_5[i] <- mean(df$AAS) > 1.05*mean(df$C)
  cat("Done!\n")
}

write.table(result, file=paste("./gfblup_results/", pheno, "/binom_results_", pheno, ".txt", sep=""), 
            row.names=FALSE, col.names=FALSE)
write.table(result_5, file=paste("./gfblup_results/", pheno, "/binom_5_results_", pheno, ".txt", sep=""),
		     row.names=FALSE, col.names=FALSE)